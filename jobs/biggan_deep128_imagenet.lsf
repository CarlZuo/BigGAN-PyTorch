#BSUB -L /bin/bash
#BSUB -J "BigGANDeep128-ImageNet"
#BSUB -o "runs/BigGANDeep128-ImageNet.%J"
#BSUB -n 8
#BSUB -R "span[ptile=1]"
#BSUB -gpu "num=4"
#BSUB -q "normal"

#
# Setup User Environement (Python, WMLCE virtual environment etc)
#
HOME2=/nobackup/users/$(whoami)
PYTHON_VIRTUAL_ENVIRONMENT=wmlce-1.6.2
CONDA_ROOT=$HOME2/anaconda3

source ${CONDA_ROOT}/etc/profile.d/conda.sh
conda activate $PYTHON_VIRTUAL_ENVIRONMENT
export EGO_TOP=/opt/ibm/spectrumcomputing

N=8
TRAINFILE=$HOME2/trainfile_biggan_deep128
rm -rf ${TRAINFILE}

cat > set.sh << EoF_s
#! /bin/sh
# Set up the GPUs; only one process per node should do this
if [ \${OMPI_COMM_WORLD_LOCAL_RANK} -eq 0 ]; then
  ppc64_cpu --smt                        # Verify the SMT mode
fi
EoF_s
chmod +x set.sh
mpirun --tag-output ./set.sh

# Run the program
export PAMI_IBV_ADAPTER_AFFINITY=0
export NCCL_SOCKET_IFNAME=ib

mpirun -np ${N} \
python $HOME2/BigGAN-PyTorch/main.py \
    --model biggan_deep \
    --dataset ImageNet --resolution 128 --shuffle  --num_workers 8 --batch_size 256 \
    --dataset_type ImageFolder \
    --num_G_accumulations 1 --num_D_accumulations 1 \
    --num_D_steps 2 --G_lr 5e-5 --D_lr 2e-4 --D_B2 0.999 --G_B2 0.999 \
    --G_attn 64 --D_attn 64 \
    --G_ch 128 --D_ch 128 \
    --G_depth 2 --D_depth 2 \
    --G_nl inplace_relu --D_nl inplace_relu \
    --SN_eps 1e-6 --BN_eps 1e-5 --adam_eps 1e-6 \
    --G_ortho 0.0 \
    --G_shared \
    --G_init ortho --D_init ortho \
    --hier --dim_z 128 --shared_dim 128 \
    --ema --use_ema --ema_start 20000 --G_eval_mode \
    --test_every 2000 --save_every 500 --num_best_copies 5 --num_save_copies 2 --seed 0 \
    --multiprocessing-distributed \
    --world-size ${N} --dist-url file://${TRAINFILE}

/bin/rm -f set.sh
